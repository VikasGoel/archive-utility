# ArchiveUtility Configuration
# -----------------------------
archive_app_config:
# Create backups:
# Parameters:
#   Required:
#     name: string name (names should be unique)
#     source: a directory (absolute or relative), can be a UNC path
#     destination: a directory (absolute or relative), can be a UNC path
#   Optional:
#     action: Move/Copy/UniqueCopy (defaults to move, UniqueCopy prefixes filenames
#           copied with date/time stamp to ensure files copied are always unique)
#           Move: Moves the files from the source to the destination. Will move
#             the file to a unique filename if the same file exists already
#             (unique filename is date/timestamp + name of source file)
#           Copy: Copies files from the source to destination. Copies only files
#             that have a different last modified timestamp than existing files
#             in the destination
#           UniqueCopy: Copies all files to a unique filename. Filename is
#             date/timestamp + name of source file
#     recursion_depth: integer number of levels to recurse (defaults to 0 for none)
#     include_pattern: file pattern to include (defaults to '*')
#           for details on patterns, see https://docs.python.org/2/library/fnmatch.html
#     retention_days: integer number of days to retain files (defaults to 10, use -1 to retain forever)
#     encrypt: True/False (defaults to False)
archives:
  - name: First
    source: ./example/source1
    destination: ./example/dest1
    action: Copy
    retention_days: -1
    recursion_depth: 3
    include_pattern: '*.csv'
  - name: Second
    source: ./example/source2
    destination: ./example/dest2
    include_pattern: '*.csv'
    retention_days: -1
    action: Copy
    encrypt: True

# ------------------------------------------------------------------------------------------
# Config for logging
# ------------------------------------------------------------------------------------------
# See http://docs.python.org/2.7/library/logging.config.html#configuration-dictionary-schema

logging:
  version: 1
  disable_existing_loggers: true

  # Configuring the default (root) logger is highly recommended
  root:
    level: !!python/name:logging.DEBUG
    handlers: [console]

  # Logging from my application
  loggers:
    myapp.lib:
      level: !!python/name:logging.WARN
      handlers: [logfile]
      qualname: myapp.lib
      propagate: false
    myapp.main:
      level: !!python/name:logging.INFO
      handlers: [console]
      qualname: myapp.main
      propagate: no

  # Controlling logging of 3rd party libs
  #   None here at this time

  # Formatters and handlers for logging
  formatters:
    simpleFormatter:
      class: !!python/name:logging.Formatter
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
      datefmt: '%d/%m/%Y %H:%M:%S'
  handlers:
    console:
      class: logging.StreamHandler
      level: !!python/name:logging.NOTSET
      formatter: simpleFormatter
      stream: ext://sys.stdout
    logfile:
      class: logging.FileHandler
      filename: ArchiveScript.log
      level: !!python/name:logging.NOTSET
      formatter: simpleFormatter
    rotatingFileHandler:
      class: logging.handlers.TimedRotatingFileHandler
      level: !!python/name:logging.NOTSET
      formatter: simpleFormatter
      filename: ArchiveScript.log
      when: 'midnight'
      # for details on rotation parameters, see:
      # https://docs.python.org/2/library/logging.handlers.html
      #interval: 10
      backupCount: 15
